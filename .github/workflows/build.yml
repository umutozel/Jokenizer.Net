name: Build and Test

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'test/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests with coverage
        run: |
          dotnet tool install --global coverlet.console
          coverlet test/Jokenizer.Net.Tests/bin/Release/net9.0/Jokenizer.Net.Tests.dll --target "dotnet" --targetargs "test test/Jokenizer.Net.Tests/Jokenizer.Net.Tests.csproj --no-build -c Release" --format opencover --output opencoverCoverage.xml

      - name: Upload coverage to Coveralls
        run: |
          dotnet tool install --global coveralls.net --version 2.0.0
          csmacnz.Coveralls --opencover opencoverCoverage.xml --repoToken "${{ secrets.COVERALLS_REPO_TOKEN }}" --commitId "${{ github.sha }}" --commitBranch "${{ github.ref_name }}" --commitAuthor "${{ github.actor }}" --commitMessage "${{ github.event.head_commit.message }}" --serviceName github

      - name: Pack NuGet package
        run: dotnet pack src/Jokenizer.Net/Jokenizer.Net.csproj --configuration Release --output ./packages

      - name: Publish NuGet package (on tag push)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          dotnet nuget push "./packages/Jokenizer.Net.*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate
